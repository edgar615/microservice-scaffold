<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  This class is generated by Jdbc code generator.
  Table : sys_user
  @author Jdbc Code Generator Date 2019-03-19
-->
<mapper namespace="com.github.edgar615.spring.mybatis.SysUserMapper">
  <sql id="all_column">
		sys_user_id,company_id,company_code,username,password,tel,mail,fullname,salt,state,sorted,must_change_passwd,passwd_changed,last_login_on,add_on,language,time_zone,ext,internal

  </sql>

  <sql id="example_where">
    <where>
      <foreach collection="example.criteria()" item="criterion">
        <choose>
          <when test="criterion.noValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
          </when>
          <when test="criterion.singleValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.likeValue}
          </when>
          <when test="criterion.betweenValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()} #{criterion.value} and #{criterion.secondValue}
          </when>
          <when test="criterion.listValue()">
            and ${criterion.underscoreFiled()}${criterion.condition()}
            <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
              #{listItem}
            </foreach>
          </when>
        </choose>
      </foreach>
    </where>
  </sql>

  <sql id="example_fields">
    <choose>
      <when test="example.fields() == null || example.fields().size() == 0">
        <include refid="all_column"/>
      </when>
      <otherwise>
        <foreach item="field" index="index" collection="example.fields()" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
        </foreach>
      </otherwise>
    </choose>
  </sql>

  <sql id="limit">
    <if test="limit != null">
      limit
      <if test="offset != null">
        #{offset},
      </if>
      #{limit}
    </if>
  </sql>

  <sql id="order_by">
    <if test="example.orderBy() != null and example.orderBy().size() > 0">
      order by ${example.orderSql}
    </if>
  </sql>

  <sql id="update_sql">
    <set>

      <if test="persistent.sysUserId != null">
        sys_user_id = #{persistent.sysUserId},
      </if>
      <if test="persistent.companyId != null">
        company_id = #{persistent.companyId},
      </if>
      <if test="persistent.companyCode != null">
        company_code = #{persistent.companyCode},
      </if>
      <if test="persistent.username != null">
        username = #{persistent.username},
      </if>
      <if test="persistent.password != null">
        password = #{persistent.password},
      </if>
      <if test="persistent.tel != null">
        tel = #{persistent.tel},
      </if>
      <if test="persistent.mail != null">
        mail = #{persistent.mail},
      </if>
      <if test="persistent.fullname != null">
        fullname = #{persistent.fullname},
      </if>
      <if test="persistent.salt != null">
        salt = #{persistent.salt},
      </if>
      <if test="persistent.state != null">
        state = #{persistent.state},
      </if>
      <if test="persistent.sorted != null">
        sorted = #{persistent.sorted},
      </if>
      <if test="persistent.mustChangePasswd != null">
        must_change_passwd = #{persistent.mustChangePasswd},
      </if>
      <if test="persistent.passwdChanged != null">
        passwd_changed = #{persistent.passwdChanged},
      </if>
      <if test="persistent.lastLoginOn != null">
        last_login_on = #{persistent.lastLoginOn},
      </if>
      <if test="persistent.addOn != null">
        add_on = #{persistent.addOn},
      </if>
      <if test="persistent.language != null">
        language = #{persistent.language},
      </if>
      <if test="persistent.timeZone != null">
        time_zone = #{persistent.timeZone},
      </if>
      <if test="persistent.ext != null">
        ext = #{persistent.ext},
      </if>
      <if test="persistent.internal != null">
        internal = #{persistent.internal},
      </if>
    </set>
  </sql>

  <sql id="update_sql_with_null">
    <set>

      <if test="persistent.sysUserId != null">
        sys_user_id = #{persistent.sysUserId},
      </if>
      <if test="persistent.companyId != null">
        company_id = #{persistent.companyId},
      </if>
      <if test="persistent.companyCode != null">
        company_code = #{persistent.companyCode},
      </if>
      <if test="persistent.username != null">
        username = #{persistent.username},
      </if>
      <if test="persistent.password != null">
        password = #{persistent.password},
      </if>
      <if test="persistent.tel != null">
        tel = #{persistent.tel},
      </if>
      <if test="persistent.mail != null">
        mail = #{persistent.mail},
      </if>
      <if test="persistent.fullname != null">
        fullname = #{persistent.fullname},
      </if>
      <if test="persistent.salt != null">
        salt = #{persistent.salt},
      </if>
      <if test="persistent.state != null">
        state = #{persistent.state},
      </if>
      <if test="persistent.sorted != null">
        sorted = #{persistent.sorted},
      </if>
      <if test="persistent.mustChangePasswd != null">
        must_change_passwd = #{persistent.mustChangePasswd},
      </if>
      <if test="persistent.passwdChanged != null">
        passwd_changed = #{persistent.passwdChanged},
      </if>
      <if test="persistent.lastLoginOn != null">
        last_login_on = #{persistent.lastLoginOn},
      </if>
      <if test="persistent.addOn != null">
        add_on = #{persistent.addOn},
      </if>
      <if test="persistent.language != null">
        language = #{persistent.language},
      </if>
      <if test="persistent.timeZone != null">
        time_zone = #{persistent.timeZone},
      </if>
      <if test="persistent.ext != null">
        ext = #{persistent.ext},
      </if>
      <if test="persistent.internal != null">
        internal = #{persistent.internal},
      </if>
      <if test="nullFields != null">
        <foreach collection="nullFields" item="field" separator="," close=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = null
        </foreach>
      </if>
      <if test="addOrSub != null">
        <foreach collection="addOrSub.keySet()" item="field" separator=",">
          ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} = ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)} + ${addOrSub.get(field)}
        </foreach>
      </if>
    </set>
  </sql>

  <resultMap id="SysUserResultMap" type="com.github.edgar615.spring.mybatis.SysUser">

      <result column="sys_user_id" property="sysUserId" />
      <result column="company_id" property="companyId" />
      <result column="company_code" property="companyCode" />
      <result column="username" property="username" />
      <result column="password" property="password" />
      <result column="tel" property="tel" />
      <result column="mail" property="mail" />
      <result column="fullname" property="fullname" />
      <result column="salt" property="salt" />
      <result column="state" property="state" />
      <result column="sorted" property="sorted" />
      <result column="must_change_passwd" property="mustChangePasswd" />
      <result column="passwd_changed" property="passwdChanged" />
      <result column="last_login_on" property="lastLoginOn" />
      <result column="add_on" property="addOn" />
      <result column="language" property="language" />
      <result column="time_zone" property="timeZone" />
      <result column="ext" property="ext" />
      <result column="internal" property="internal" />
  </resultMap>

  <insert id="insert" parameterType="com.github.edgar615.spring.mybatis.SysUser">
    insert into
    sys_user(sys_user_id,company_id,company_code,username,password,tel,mail,fullname,salt,state,sorted,must_change_passwd,passwd_changed,last_login_on,add_on,language,time_zone,ext,internal)
    values(#{sysUserId},#{companyId},#{companyCode},#{username},#{password},#{tel},#{mail},#{fullname},#{salt},#{state},#{sorted},#{mustChangePasswd},#{passwdChanged},#{lastLoginOn},#{addOn},#{language},#{timeZone},#{ext},#{internal})
  </insert>

  <insert id="insertAndGeneratedKey" parameterType="com.github.edgar615.spring.mybatis.SysUser"
          useGeneratedKeys="true" keyProperty="id" keyColumn="sys_user_id">
    insert into
    sys_user(sys_user_id,company_id,company_code,username,password,tel,mail,fullname,salt,state,sorted,must_change_passwd,passwd_changed,last_login_on,add_on,language,time_zone,ext,internal)
    values(#{sysUserId},#{companyId},#{companyCode},#{username},#{password},#{tel},#{mail},#{fullname},#{salt},#{state},#{sorted},#{mustChangePasswd},#{passwdChanged},#{lastLoginOn},#{addOn},#{language},#{timeZone},#{ext},#{internal})

    <selectKey resultType="long" order="AFTER" keyProperty="id" keyColumn="sys_user_id">
      select LAST_INSERT_ID() as sys_user_id
    </selectKey>
  </insert>

  <delete id="deleteById" parameterType="long">
    delete from sys_user where sys_user_id = #{id}
  </delete>

  <select id="findById" resultMap="SysUserResultMap" parameterType="long">
    select
      <include refid="all_column" />
    from sys_user
    where  sys_user_id = #{id}
  </select>

  <select id="findCustomFieldById" resultMap="SysUserResultMap">
    select
     <choose>
       <when test="fields == null || fields.size() == 0">
         <include refid="all_column"/>
       </when>
       <otherwise>
         <foreach item="field" index="index" collection="fields" separator=",">
           ${@com.github.edgar615.util.base.StringUtils@underscoreName(field)}
         </foreach>
       </otherwise>
     </choose>
    from sys_user
    where sys_user_id = #{id}
  </select>

  <select id="findByExample" resultMap="SysUserResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from sys_user
    <include refid="example_where"/>
    <include refid="order_by"/>
  </select>

  <select id="findByExampleWithLimit" resultMap="SysUserResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="example_fields" />
    from sys_user
    <include refid="example_where"/>
    <include refid="order_by"/>
    <include refid="limit"/>
  </select>

  <select id="countByExample" resultType="int">
    select count(*) from sys_user
    <include refid="example_where"/>
  </select>

  <delete id="deleteByExample">
    delete from sys_user
    <include refid="example_where"/>
  </delete>

  <update id="updateById">
    update sys_user
    <include refid="update_sql"/>
    where sys_user_id = #{id}
  </update>

  <update id="updateByIdWithNull">
    update sys_user
    <include refid="update_sql_with_null"/>
    where sys_user_id = #{id}
  </update>

  <update id="updateByExample">
    update sys_user
    <include refid="update_sql"/>
    <include refid="example_where"/>
  </update>

  <update id="updateByExampleWithNull">
    update sys_user
    <include refid="update_sql_with_null"/>
    <include refid="example_where"/>
  </update>
</mapper>
